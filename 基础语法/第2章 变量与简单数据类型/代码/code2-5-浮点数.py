"""
第2章 变量与简单数据类型 - 浮点数
功能：演示浮点数的运算、四舍五入和取整操作
重点：浮点数运算、round()函数、math模块的ceil()和floor()函数
"""

# 浮点数的计算
# 定义两个浮点数变量
n1 = 2.1      # 第一个浮点数
n2 = 15.256   # 第二个浮点数

# 浮点数相加（注意：浮点数运算可能有精度问题）
print(n1 + n2)  # 输出：17.356

# 精度：单精度7位小数，双精度14位小数  精度问题  数学计算的结果和程序运行的结果可能一致
# 结论：一般不建议直接使用浮点数，来做计算，推荐使用相关函数
n3 = 1.1111111111111111
n4 = 2.2222222222222222
print(n3 * n4)

"""
    数学计算函数
"""
# 1.四舍五入round函数
# round(数值, 保留小数位数) - 对浮点数进行四舍五入
n3 = round(100.123456789 , 3)
print(n3) # 输出：100.123
n3 = round(n1 + n2 , 2)  # 保留2位小数
print(n3)  # 输出：17.36

# 2.导入math模块，用于数学运算
import math

# 向上取整 ceil函数
# math.ceil() - 向上取整，返回不小于该数的最小整数
n4 = math.ceil(n1 + n2)  # 17.356向上取整
print("向上取整的结果是", n4)  # 输出：向上取整的结果是 18

# 向下取整 floor函数
# math.floor() - 向下取整，返回不大于该数的最大整数
n5 = math.floor(n1 + n2)  # 17.356向下取整
print("向下取整的结果是", n5)  # 输出：向下取整的结果是 17